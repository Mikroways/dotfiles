# Where to look for tools
MW_TOOLS_DIR=$HOME/.mikroways/tools
WATCHED_DIRS=(${(f)"$(find $HOME/.mikroways -type d -name .git -exec dirname {} \;)"})

# Last check timestamp file
GIT_UPDATE_CHECK_FILE="${HOME}/.mw-tools-upgrade.lock"

function mw-tools-force-upgrade() {
  rm -f $GIT_UPDATE_CHECK_FILE
  mw-tools-upgrade
}

# Check for updates
function mw-tools-upgrade() {
  local today=$(date +%Y-%m-%d)
  local REPOS_TO_UPDATE=()
  local REPOS_WITH_LOCAL_UPDATES=0

  # Verifica si ya se revis√≥ hoy
  if [[ -f "$GIT_UPDATE_CHECK_FILE" && $(cat "$GIT_UPDATE_CHECK_FILE") == "$today" ]]; then
    return
  fi
  echo "Checking for Mikroways tools updates...."

  echo "$today" > "$GIT_UPDATE_CHECK_FILE"
  for repo_dir in "${WATCHED_DIRS[@]}"; do
    IS_MAIN_BRANCH=$(LC_ALL=C git -C $repo_dir rev-parse --abbrev-ref HEAD | grep -iE "^main|master$")
    if [[ -z "$IS_MAIN_BRANCH" ]]; then
      echo "  üì¢ Repository is not using main branch for $repo_dir. Please review"
    fi
  done
  for repo_dir in "${WATCHED_DIRS[@]}"; do
    LOCAL_UPDATES=$(LC_ALL=C git -C $repo_dir status | grep -E "modified:|Untracked")
    if [[ ! -z "$LOCAL_UPDATES" ]]; then
      echo "  üö© There are local updates for $repo_dir"
      echo "     Verify changes and commit them. Share your changes"
      REPOS_WITH_LOCAL_UPDATES=1
    fi
  done
  if [[ "$REPOS_WITH_LOCAL_UPDATES" -ne 0 ]]; then
    echo "Update check aborted because local changes must be resolved"
    return
  fi
  for repo_dir in "${WATCHED_DIRS[@]}"; do
    git -C $repo_dir remote update &>/dev/null
    UPDATES=$(LC_ALL=C git status -uno | grep "Your branch is behind")
    if [[ ! -z "$UPDATES" ]]; then
      echo "  ‚ö†Ô∏è  There are updates for $repo_dir"
      REPOS_TO_UPDATE+=( $repo_dir )
    fi
  done
  if [[ "${#REPOS_TO_UPDATE[@]}" -ne 0 ]]; then
    echo "¬øUpgrade mikroways tools? (Y/N): "
    read -r answer
    if [[ "$( echo $answer | tr '[:upper:]' '[:lower:]')" == "y" ]]; then
      for repo_dir in "${REPOS_TO_UPDATE[@]}"; do
        git -C $repo_dir pull
      done
      echo
      echo "  ‚úîÔ∏è  Mikroways tools updated"
    else
      echo "  ‚ùå Omit updates for Mikroways tools"
    fi
  fi
}



# Ejecutar la funci√≥n en cada inicio de shell
mw-tools-upgrade
